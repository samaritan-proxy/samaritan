// Copyright 2019 Samaritan Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package redis;

import "gogoproto/gogo.proto";
import "validate/validate.proto";

option go_package = "github.com/samaritan-proxy/samaritan/pb/config/protocol/redis";

option (gogoproto.enum_stringer_all) = false;
option (gogoproto.goproto_enum_stringer_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

// Strategy of a read only command.
enum ReadStrategy {
  // Read from master nodes.
  MASTER = 0;
  // Read from replica nodes.
  REPLICA = 1;
  // Read from all nodes.
  BOTH = 2;
}

// Configuration of compression.
message Compression {
  // Switch of compress, default is off.
  // NOTE: Uncompress will always work.
  bool enable = 1;

  enum Algorithm {
    SNAPPY = 0;

    reserved 256 to max;
  }
  // Compression algorithm used in compression filter.
  Algorithm algorithm = 2 [ (validate.rules).enum = {in : [ 0, 255 ]} ];

  // Value will be ignored when byte length of value is less than the
  // threshold, must be greater than 0.
  uint32 threshold = 3 [ (validate.rules).uint32 = {gt : 0} ];
}
